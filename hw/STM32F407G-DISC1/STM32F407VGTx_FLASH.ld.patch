diff --git a/hw/STM32F407G-DISC1/STM32F407VGTx_FLASH.ld b/hw/STM32F407G-DISC1/STM32F407VGTx_FLASH.ld
index a6e6fe4..a2c1203 100644
--- a/hw/STM32F407G-DISC1/STM32F407VGTx_FLASH.ld
+++ b/hw/STM32F407G-DISC1/STM32F407VGTx_FLASH.ld
@@ -53,7 +53,7 @@
 ENTRY(Reset_Handler)
 
 /* Highest address of the user mode stack */
-_estack = ORIGIN() + LENGTH();    /* end of RAM */
+_estack = ORIGIN(RAM) + LENGTH(RAM);    /* end of RAM */
 /* Generate a link error if heap and stack don't fit into RAM */
 _Min_Heap_Size = 0x200;      /* required amount of heap  */
 _Min_Stack_Size = 0x400; /* required amount of stack */
@@ -144,7 +144,7 @@ SECTIONS
 
     . = ALIGN(4);
     _edata = .;        /* define a global symbol at data end */
-  } > AT> FLASH
+  } >RAM AT> FLASH
 
   _siccmram = LOADADDR(.ccmram);
 
@@ -180,10 +180,10 @@ SECTIONS
     . = ALIGN(4);
     _ebss = .;         /* define a global symbol at bss end */
     __bss_end__ = _ebss;
-  } >
+  } >RAM
 
   /* User_heap_stack section, used to check that there is enough RAM left */
-  ._user_heap_stack :
+  ._user_heap_stack  (NOLOAD):
   {
     . = ALIGN(8);
     PROVIDE ( end = . );
@@ -191,7 +191,7 @@ SECTIONS
     . = . + _Min_Heap_Size;
     . = . + _Min_Stack_Size;
     . = ALIGN(8);
-  } >
+  } >RAM
 
   
 
@@ -204,5 +204,3 @@ SECTIONS
   }
 
 }
-
-
